# Exclude common directories that are typically not part of the source code or are generated by tools.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Set the maximum line length to 120 characters.
line-length = 120

# Define the number of spaces used for indentation.
indent-width = 4

# The minimum Python version to target, e.g., when considering automatic code upgrades,
# like rewriting type annotations.
target-version = "py38"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# Activate Security Rules (S) to replace bandit
# Enable the isort rules (I) to replace isort
select = [
    "F",
    "E4",
    "E7",
    "E9",
    "W",  # pycodestyle warnings
    "S",
    "I",
    "B",  # flake8-bugbear
    "SIM",  # flake8-simplify
]
# List rules that will be ignored.
ignore = [
    "F401",  # {name} imported but unused
    "SIM102",  # Use a single `if` statement instead of nested `if` statements
    "SIM108",  # Use ternary operator
    "SIM117",  # Use a single `with` statement with multiple contexts instead of nested `with` statements
    "SIM210",  # Remove unnecessary `True if ... else False`
    "SIM211",  # Remove unnecessary `False if ... else True`
]
extend-select = ["I"]  # isort-like import sorting.

# Allow auto-fixing of all enabled rules when using the `--fix` option.
fixable = ["ALL"]
unfixable = []

# Define a regex pattern for allowed unused variables (typically underscore-prefixed).
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.flake8-bugbear]
extend-immutable-calls = [
    # Whitelisted default arguments
    "fastapi.Header",
    "fastapi.Depends",
]

[format]
# Prefer single quotes over double quotes
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
